server {
    listen 80 default_server;
#    listen [::]:80 default_server;
    root /var/www/html/public;

    # Hide Nginx Version
    server_tokens off;
    charset utf-8;
    autoindex_localtime on;

    # Cache Statis Files
    location ~* \.(jpg|jpeg|gif|png|svg|ico|xml|woff2|woff|eot|svg|ttf|otf)$ {
        add_header  Cache-Control public;
        access_log  off;
        log_not_found off;
        expires 360d;
    }

    location ~* \.(?:html) {
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
    }

    # css and js are tokenized
    location ~* \.(?:css|js|html) {
        add_header Cache-Control public;
        access_log  off;
        log_not_found off;
        expires 24h;
    }

    # non tokenized images only cache for 1 week as they are in my context subject to change.
    location ~* \.(?:gif|png|jpe?g)$ {
        add_header Cache-Control public;
        expires 1w;
        access_log off;
    }

    # missing vary header on zippable fonts
    # nginx gzip_static does not add Vary header for fonts.
    location ~* \.(?:eot|ttf|svg)$ {
        add_header Vary Accept-Encoding;
        add_header Cache-Control public;
        expires 360d;
        access_log off;
        log_not_found off;
    }

    # woff fonts should not be zipped.
    location ~* \.(?:woff)$ {
        add_header Cache-Control public;
        access_log off;
        log_not_found off;
        expires 360d;
    }

    location / {
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        try_files $uri $uri/ /index.html;
    }

    location ~ /pt(.*)$ {
        access_log off;
        log_not_found off;
        add_header Last-Modified $date_gmt;
        add_header Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age=0';
        if_modified_since off;
        expires off;
        etag off;
        rewrite [^/]$ $scheme://$http_host/ permanent;
    }

    # Deny access file .*
    location ~ /\. {
        access_log off;
        log_not_found off;
        deny all;
    }

    # Deny access file
    location ~ /(composer.json|composer.lock|symfony.lock|crontab.sh|webpack.config.js|phpunit.xml.dist|phpcs.xml.dist|yarn.lock|package.json)$ {
        access_log off;
        log_not_found off;
        deny all;
    }

    location ~* "\.(old|orig|original|php#|php~|php_bak|save|swo|aspx?|tpl|sh|bash|bak?|cfg|cgi|dll|exe|git|hg|ini|jsp|log|mdb|out|sql|svn|swp|tar|rdf)$" {
        log_not_found off;
        deny all;
    }

    # Blocking common attacks https://github.com/VirtuBox/advanced-nginx-cheatsheet#blocking-common-attacks
    location ~* "(base64_encode)(.*)(\()" {
        deny all;
    }

    # javascript eval() url
    location ~* "(eval\()" {
        deny all;
    }

    #not indexable
    add_header X-Robots-Tag "noindex";

    location = /robots.txt {
      return 200 "User-agent: *\nDisallow: /\n";
    }

    error_log /var/log/nginx/error.log;
    access_log /var/log/nginx/access.log;
}
